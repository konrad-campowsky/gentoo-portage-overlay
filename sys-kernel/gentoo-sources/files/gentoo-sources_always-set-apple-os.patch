diff '--color=auto' -ru a/drivers/firmware/efi/libstub/x86-stub.c b/drivers/firmware/efi/libstub/x86-stub.c
--- a/drivers/firmware/efi/libstub/x86-stub.c	2024-09-15 16:57:56.000000000 +0200
+++ b/drivers/firmware/efi/libstub/x86-stub.c	2024-10-04 08:53:36.345213683 +0200
@@ -225,37 +225,6 @@
 	}
 }
 
-static bool apple_match_product_name(void)
-{
-	static const char type1_product_matches[][15] = {
-		"MacBookPro11,3",
-		"MacBookPro11,5",
-		"MacBookPro13,3",
-		"MacBookPro14,3",
-		"MacBookPro15,1",
-		"MacBookPro15,3",
-		"MacBookPro16,1",
-		"MacBookPro16,4",
-	};
-	const struct efi_smbios_type1_record *record;
-	const u8 *product;
-
-	record = (struct efi_smbios_type1_record *)efi_get_smbios_record(1);
-	if (!record)
-		return false;
-
-	product = efi_get_smbios_string(record, product_name);
-	if (!product)
-		return false;
-
-	for (int i = 0; i < ARRAY_SIZE(type1_product_matches); i++) {
-		if (!strcmp(product, type1_product_matches[i]))
-			return true;
-	}
-
-	return false;
-}
-
 static void apple_set_os(void)
 {
 	struct {
@@ -265,26 +234,19 @@
 	} *set_os;
 	efi_status_t status;
 
-	if (!efi_is_64bit() || !apple_match_product_name())
-		return;
-
 	status = efi_bs_call(locate_protocol, &APPLE_SET_OS_PROTOCOL_GUID, NULL,
 			     (void **)&set_os);
 	if (status != EFI_SUCCESS)
 		return;
 
-	if (set_os->version >= 2) {
-		status = set_os->set_os_vendor("Apple Inc.");
-		if (status != EFI_SUCCESS)
-			efi_err("Failed to set OS vendor via apple_set_os\n");
-	}
+	status = set_os->set_os_vendor("Apple Inc.");
+	if (status != EFI_SUCCESS)
+		efi_err("Failed to set OS vendor via apple_set_os\n");
 
-	if (set_os->version > 0) {
-		/* The version being set doesn't seem to matter */
-		status = set_os->set_os_version("Mac OS X 10.9");
-		if (status != EFI_SUCCESS)
-			efi_err("Failed to set OS version via apple_set_os\n");
-	}
+	/* The version being set doesn't seem to matter */
+	status = set_os->set_os_version("Mac OS X 10.9");
+	if (status != EFI_SUCCESS)
+		efi_err("Failed to set OS version via apple_set_os\n");
 }
 
 efi_status_t efi_adjust_memory_range_protection(unsigned long start,
@@ -397,12 +359,10 @@
 
 static void setup_quirks(struct boot_params *boot_params)
 {
-	if (!memcmp(efistub_fw_vendor(), apple, sizeof(apple))) {
-		if (IS_ENABLED(CONFIG_APPLE_PROPERTIES))
-			retrieve_apple_device_properties(boot_params);
+	if (IS_ENABLED(CONFIG_APPLE_PROPERTIES))
+		retrieve_apple_device_properties(boot_params);
 
-		apple_set_os();
-	}
+	apple_set_os();
 }
 
 /*
